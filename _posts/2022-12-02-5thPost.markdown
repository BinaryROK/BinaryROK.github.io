---
layout: post
title:  "다섯번째"
date:   2022-12-05 09:00:01 +0900
categories: jekyll update
tag : 업무
---
오늘은 다섯번째 출근날이다. 저번주 금요일 퇴근전에  Github Desktop을 다운로드 받았다.<br/>
원래 git cmd에서 했던 commit과 push를 GithubDesktop에서 편하게 할수가 있다. <br/>
그냥 PC에있는 내 깃허브 레포지토리로 들어가 파일을 추가,제거,수정하고 commit to main, push origin을 클릭만하면 자동으로 적용이 된다.<br/>
앞으로 더욱 편하게 포스트를 할수있겠다.<br/>
오늘 배울것은 라즈베리파이 gcc 이다. 아직은 아는게없으니 배우고나서 추가해야겠다.<br/>
일단 c소스코드로 간단한 아웃풋을 내는것이 일차적 목표이다.<br/><br/>
일단 gcc는 리눅스에서 c소스파일을 컴파일할때 사용한다 여기서 컴파일이란 작성한 소스코드를 기계어로 번역해주는 작업을 말한다<br/>
c소스코드로 Hello World를 실행해보자
{% highlight ruby %}
일단 터미널에
nano file1.c 파일을 만들어 그 안에
#include <stdio.h> - stdio헤더파일 가져오기
void main()  - 함수선언,void는 return이 필요없는 자료형이다. 
  {
    printf("HelloWorld\n"); -printf를 사용하려면 stdio.h가 필요하다.
  }
  를 작성하고 저장한다.
  후에 터미널에서 gcc -o file2 file1.c 로 실행파일file2를만든다. -여기서 file1,2는 임의의 파일명이다.
  실행파일은 ./file2 로 실행이가능하다.

{% endhighlight %}
그다음은 크로스컴파일이다. 크로스컴파일러는 빌드한 파일을 다른 OS에서 컴파일할수있는 코드를 생성해주는것<br/>
host 와 target이 있는데 이때 크로스컴파일을 하면 host에서 빌드한 소스코드를 target에서 컴파일 할수있게되는것이다.<br/>
이와 반대로 동일한 환경에서 사용가능한 실행파일을 만들어주는 컴파일러를 네이티브컴파일러 라고한다.<br/>







{% highlight ruby %}



{% endhighlight %}
